name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        go-version: [1.15.x]
        platform: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Check Windows
        if: ${{ os.runner == Windows }}
        id: vars
        run: echo ::set-output name=archive_name::"action_experiments-windows.zip"

      - name: Check Linux
        if: ${{ os.runner == Linux }}
        id: vars
        run: echo ::set-output name=archive_name::"action_experiments-linux.tgz"

      - name: Check macOS
        if: ${{ os.runner == macOS }}
        id: vars
        run: echo ::set-output name=archive_name::"action_experiments-macos.tgz"

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go mod download

      - name: Build
        run: go build -v .

      - name: Test
        # run: echo go test -v .
        # note that $RUNNER_OS is empty on the windows runner somehow.
        run: echo ${{ runner.os }} && ls && ./action_experiments

      - name: package
        id: package
        run: |
          archive_name=${{ steps.vars.outputs.archive_name }}
          runner_os=${{ runner.os }}
          echo os_type: $os_type
          if [[ "${runner_os}" == "Linux" || "${runner_os}" == "macOS" ]]; then
              tar -czvf $archive_name action_experiments
          elif [[ "${runner_os}" == "Windows" ]]; then
              zip -qq -r "$archive_name" action_experiments.exe
          else
              echo 'unsupported runner'
              exit 1
          fi

      - name: Publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.vars.outputs.archive_name }}
          path: ${{ steps.vars.outputs.archive_name }}
