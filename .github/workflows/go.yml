name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:

defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      matrix:
        go-version: [1.15.x]
        platform: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: echo
        run: echo "Version ${{ github.event.inputs.version }}"

      - name: Vars Windows
        if: matrix.platform == 'windows-latest'
        # id: vars-win
        # run: echo "::set-output name=archive_name::action_experiments-windows.zip"
        run: echo "archive_name=action_experiments-windows.zip" >> $GITHUB_ENV

      - name: Vars Linux
        if: matrix.platform == 'ubuntu-latest'
        # id: vars-linux
        # run: echo "::set-output name=archive_name::action_experiments-linux.tgz"
        run: echo "archive_name=action_experiments-linux.tgz" >> $GITHUB_ENV

      - name: Vars macOS
        if: matrix.platform == 'macos-latest'
        # id: vars-macos
        # run: echo "::set-output name=archive_name::action_experiments-macos.tgz"
        run: echo "archive_name=action_experiments-macos.tgz" >> $GITHUB_ENV

      # - name: Vars
      #   id: vars
      #   run: echo "::set-output name=archive_name::${{ steps.vars-win.outputs.archive_name }}${{ steps.vars-linux.outputs.archive_name }}${{ steps.vars-macos.outputs.archive_name }}"

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go mod download

      - name: Build
        run: go build -v .

      - name: Test
        # run: echo go test -v .
        # note that $RUNNER_OS is empty on the windows runner somehow.
        run: echo ${{ runner.os }} && ls && ./action_experiments

      - name: Package tgz
        if: matrix.platform != 'windows-latest'
        run: tar -czvf "${{ env.archive_name }}" action_experiments

      - name: Package zip
        if: matrix.platform == 'windows-latest'
        shell: powershell
        run: Compress-Archive -Path action_experiments.exe -DestinationPath "${{ env.archive_name }}"

      - name: Publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.archive_name }}
          path: ${{ env.archive_name }}
