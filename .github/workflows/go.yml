name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        go-version: [1.15.x]
        platform: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go mod download

    - name: Build
      run: go build -v .

    - name: Test
      # run: echo go test -v .
      # note that $RUNNER_OS is empty on the windows runner somehow.
      run: echo ${{ runner.os }} && ls && ./action_experiments && ps aux

    - name: package
      id: package
      run: |
        echo ${{ runner.os }}
        os_type=${{ runner.os }}
        echo os_type: $os_type
        os_type=$(echo $os_type | tr '[:upper:]' '[:lower:]')
        echo os_type: $os_type
        if [[ "${os_type}" == "linux" || "${os_type}" == "macos" ]]; then
            archive_name=action_experiments-${os_type}.tgz
            tar -czvf $archive_name action_experiments
        elif [[ "${os_type}" == "windows" ]]; then
            archive_name=action_experiments-${os_type}.zip
            zip -qq -r "$archive_name" action_experiments.exe
        else
            echo 'unsupported runner'
            exit 1
        fi
        echo ::set-output name=archive_name::"$archive_name"

    - name: Publish artifact
      uses: actions/upload-artifact@v2
      with:
        name: action_experiments${{ steps.pacakge.outputs.archive_name }}
        path: action_experiments${{ steps.vars.outputs.archive_name }}
